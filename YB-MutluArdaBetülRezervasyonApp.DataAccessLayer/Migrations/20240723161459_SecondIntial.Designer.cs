// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YB_MutluArdaBetülRezervasyonApp.DataAccessLayer.Context;

#nullable disable

namespace YB_MutluArdaBetülRezervasyonApp.DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240723161459_SecondIntial")]
    partial class SecondIntial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckinDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TCNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.GuestBooking", b =>
                {
                    b.Property<Guid>("GuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("GuestId", "BookingId");

                    b.HasIndex("BookingId");

                    b.ToTable("GuestBookings");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CheckinTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c94705d7-bda9-4f72-b9b9-cbff87b36948"),
                            Address = "Küçük Ayasofya, Çayıroğlu Sk. No:18, 34122 Fatih/İstanbul",
                            CheckinTime = new DateTime(2024, 7, 23, 19, 14, 58, 531, DateTimeKind.Local).AddTicks(5198),
                            CheckoutTime = new DateTime(2024, 7, 23, 19, 14, 58, 531, DateTimeKind.Local).AddTicks(5212),
                            Email = "CheersLighthouse@gmail.com",
                            IsActive = true,
                            Name = "Cheers Lighthouse",
                            Phone = "02124582324",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("20e33092-3ca1-478f-b2a4-49aec63f8fcb"),
                            Address = "Levazım, Vadi Caddesi Zorlu Center, 34340 Beşiktaş/İstanbul",
                            CheckinTime = new DateTime(2024, 7, 23, 19, 14, 58, 531, DateTimeKind.Local).AddTicks(5215),
                            CheckoutTime = new DateTime(2024, 7, 23, 19, 14, 58, 531, DateTimeKind.Local).AddTicks(5216),
                            Email = "Raffles@gmail.com",
                            IsActive = true,
                            Name = "Hotel Raffles Istanbul",
                            Phone = "02129240200",
                            Stars = 5
                        },
                        new
                        {
                            Id = new Guid("4c82ef38-305b-4b69-9c03-d3afad33aa50"),
                            Address = "Harbiye, Cumhuriyet Cd. No:50, 34367 Şişli/İstanbul",
                            CheckinTime = new DateTime(2024, 7, 23, 19, 14, 58, 531, DateTimeKind.Local).AddTicks(5218),
                            CheckoutTime = new DateTime(2024, 7, 23, 19, 14, 58, 531, DateTimeKind.Local).AddTicks(5218),
                            Email = "Hilton@gmail.com",
                            IsActive = true,
                            Name = "Hilton İstanbul Bosphorus",
                            Phone = "02123156000",
                            Stars = 5
                        });
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("96958034-016d-4979-bfda-f863702a192f"),
                            HotelId = new Guid("c94705d7-bda9-4f72-b9b9-cbff87b36948"),
                            IsActive = true,
                            RoomTypeId = new Guid("03eb66b3-1cab-45b6-b9d7-d0e9a0aac9d9"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("194098df-882d-465b-b8a4-878abd65859b"),
                            HotelId = new Guid("20e33092-3ca1-478f-b2a4-49aec63f8fcb"),
                            IsActive = true,
                            RoomTypeId = new Guid("79ce7300-9310-4530-b40f-56f47032bd0f"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("b1effe20-35fe-44e8-80bb-1200c6022b31"),
                            HotelId = new Guid("4c82ef38-305b-4b69-9c03-d3afad33aa50"),
                            IsActive = true,
                            RoomTypeId = new Guid("64bf8566-e88f-49a6-ae06-799d4df0bb8d"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("0c83a21a-a5c3-4a5e-9783-7cc49594aeaf"),
                            HotelId = new Guid("20e33092-3ca1-478f-b2a4-49aec63f8fcb"),
                            IsActive = true,
                            RoomTypeId = new Guid("95ee5c2c-8b84-492b-ae6a-be1a77c0f7fb"),
                            Status = "Boş"
                        });
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03eb66b3-1cab-45b6-b9d7-d0e9a0aac9d9"),
                            Capacity = 1,
                            Description = "Şık ve ferah",
                            IsActive = true,
                            Name = "Tek kişilik",
                            PricePerNight = 1500m
                        },
                        new
                        {
                            Id = new Guid("79ce7300-9310-4530-b40f-56f47032bd0f"),
                            Capacity = 2,
                            Description = "Geniş ve ferah",
                            IsActive = true,
                            Name = "Çift kişilik",
                            PricePerNight = 2500m
                        },
                        new
                        {
                            Id = new Guid("64bf8566-e88f-49a6-ae06-799d4df0bb8d"),
                            Capacity = 3,
                            Description = "3 kişinin kalabileceği genişlikte bir oda",
                            IsActive = true,
                            Name = "Üç kişilik",
                            PricePerNight = 3500m
                        },
                        new
                        {
                            Id = new Guid("95ee5c2c-8b84-492b-ae6a-be1a77c0f7fb"),
                            Capacity = 4,
                            Description = "Geniş oda tasarımı",
                            IsActive = true,
                            Name = "Dört kişilik",
                            PricePerNight = 4200m
                        });
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5176cc9-4bbb-4b28-88b3-0d00f4cf65a5"),
                            DateOfBirth = new DateTime(1963, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marie@gmail.com",
                            FirstName = "Marie",
                            HireDate = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = new Guid("c94705d7-bda9-4f72-b9b9-cbff87b36948"),
                            IsActive = true,
                            LastName = "Bertrand",
                            Phone = "(505) 555 55 50",
                            Position = "Teknik Müdür",
                            Salary = 40.000m
                        },
                        new
                        {
                            Id = new Guid("92694c6b-a1ef-4960-920a-fd089fbe8a6c"),
                            DateOfBirth = new DateTime(1955, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Steven@gmail.com",
                            FirstName = "Steven",
                            HireDate = new DateTime(1990, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = new Guid("c94705d7-bda9-4f72-b9b9-cbff87b36948"),
                            IsActive = true,
                            LastName = "Buchanan",
                            Phone = "(71) 555-7773",
                            Position = "Muhasebe Müdürü",
                            Salary = 80.000m
                        },
                        new
                        {
                            Id = new Guid("55326e2c-d580-403e-b08d-10c9597913cd"),
                            DateOfBirth = new DateTime(1963, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Michael@gmail.com",
                            FirstName = "Michael",
                            HireDate = new DateTime(1993, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = new Guid("20e33092-3ca1-478f-b2a4-49aec63f8fcb"),
                            IsActive = true,
                            LastName = "Suyama",
                            Phone = "(536) 555-7773",
                            Position = "Mutfak Şefi",
                            Salary = 90.000m
                        },
                        new
                        {
                            Id = new Guid("8fb15a6a-b4c7-4d52-8b19-c90af4381013"),
                            DateOfBirth = new DateTime(1960, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Robert@gmail.com",
                            FirstName = "Robert",
                            HireDate = new DateTime(1994, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = new Guid("4c82ef38-305b-4b69-9c03-d3afad33aa50"),
                            IsActive = true,
                            LastName = "King",
                            Phone = "(71) 555-5598",
                            Position = "Housekeeper",
                            Salary = 75.000m
                        });
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.GuestBooking", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", "Booking")
                        .WithMany("GuestBookings")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Guest", "Guest")
                        .WithMany("GuestBookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Payment", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Room", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Staff", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Hotel", "Hotel")
                        .WithMany("Staffs")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", b =>
                {
                    b.Navigation("GuestBookings");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Guest", b =>
                {
                    b.Navigation("GuestBookings");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
