// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YB_MutluArdaBetülRezervasyonApp.DataAccessLayer.Context;

#nullable disable

namespace YB_MutluArdaBetülRezervasyonApp.DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240725062045_NewCreatedIntialDb")]
    partial class NewCreatedIntialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckinDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TCNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.GuestBooking", b =>
                {
                    b.Property<Guid>("GuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("GuestId", "BookingId");

                    b.HasIndex("BookingId");

                    b.ToTable("GuestBookings");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CheckinTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c4eaa5f-d2b7-4ed3-9c3a-4d1a81c14d48"),
                            Address = "Küçük Ayasofya, Çayıroğlu Sk. No:18, 34122 Fatih/İstanbul",
                            CheckinTime = new DateTime(2024, 7, 25, 9, 20, 45, 66, DateTimeKind.Local).AddTicks(8577),
                            CheckoutTime = new DateTime(2024, 7, 25, 9, 20, 45, 66, DateTimeKind.Local).AddTicks(8592),
                            Email = "CheersLighthouse@gmail.com",
                            IsActive = true,
                            Name = "Cheers Lighthouse",
                            Phone = "02124582324",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("aaa8869d-f923-4abf-bbb4-44d4fce509a8"),
                            Address = "Levazım, Vadi Caddesi Zorlu Center, 34340 Beşiktaş/İstanbul",
                            CheckinTime = new DateTime(2024, 7, 25, 9, 20, 45, 66, DateTimeKind.Local).AddTicks(8600),
                            CheckoutTime = new DateTime(2024, 7, 25, 9, 20, 45, 66, DateTimeKind.Local).AddTicks(8600),
                            Email = "Raffles@gmail.com",
                            IsActive = true,
                            Name = "Hotel Raffles Istanbul",
                            Phone = "02129240200",
                            Stars = 5
                        },
                        new
                        {
                            Id = new Guid("92d14418-2deb-4813-bf2d-4b3ab0b5951e"),
                            Address = "Harbiye, Cumhuriyet Cd. No:50, 34367 Şişli/İstanbul",
                            CheckinTime = new DateTime(2024, 7, 25, 9, 20, 45, 66, DateTimeKind.Local).AddTicks(8602),
                            CheckoutTime = new DateTime(2024, 7, 25, 9, 20, 45, 66, DateTimeKind.Local).AddTicks(8603),
                            Email = "Hilton@gmail.com",
                            IsActive = true,
                            Name = "Hilton İstanbul Bosphorus",
                            Phone = "02123156000",
                            Stars = 5
                        });
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoomNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ae5bee7-4e61-48b1-8079-66d4f2f8c948"),
                            HotelId = new Guid("9c4eaa5f-d2b7-4ed3-9c3a-4d1a81c14d48"),
                            IsActive = true,
                            RoomNo = "Single Oda",
                            RoomTypeId = new Guid("e0a585f2-79a4-4db8-95af-348e549f53eb"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("cdc72f83-9375-4f01-90ef-60e2e80adde5"),
                            HotelId = new Guid("9c4eaa5f-d2b7-4ed3-9c3a-4d1a81c14d48"),
                            IsActive = true,
                            RoomNo = "Double Oda",
                            RoomTypeId = new Guid("5f3b1e9a-4ace-4ba7-b10f-2fb5911db8ac"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("916b12c9-7819-4fc0-b61b-a6f6388890c6"),
                            HotelId = new Guid("9c4eaa5f-d2b7-4ed3-9c3a-4d1a81c14d48"),
                            IsActive = true,
                            RoomNo = "Queen Oda",
                            RoomTypeId = new Guid("b4515eb4-bcfc-46f4-ad8c-2a90f05843ab"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("a2b60f7e-2b27-47b8-ade2-d5659453b563"),
                            HotelId = new Guid("9c4eaa5f-d2b7-4ed3-9c3a-4d1a81c14d48"),
                            IsActive = true,
                            RoomNo = "King Oda",
                            RoomTypeId = new Guid("accdac0c-7382-41f5-a4ca-92e41435acf4"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("6a61756a-1b2f-4dfc-ac73-e16051aa566c"),
                            HotelId = new Guid("aaa8869d-f923-4abf-bbb4-44d4fce509a8"),
                            IsActive = true,
                            RoomNo = "Single Oda",
                            RoomTypeId = new Guid("e0a585f2-79a4-4db8-95af-348e549f53eb"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("90b18030-ee56-48aa-aac3-1892e85c552b"),
                            HotelId = new Guid("aaa8869d-f923-4abf-bbb4-44d4fce509a8"),
                            IsActive = true,
                            RoomNo = "Double Oda",
                            RoomTypeId = new Guid("5f3b1e9a-4ace-4ba7-b10f-2fb5911db8ac"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("5703c195-4a5a-496f-aa5d-913af0d042ea"),
                            HotelId = new Guid("aaa8869d-f923-4abf-bbb4-44d4fce509a8"),
                            IsActive = true,
                            RoomNo = "Queen Oda",
                            RoomTypeId = new Guid("b4515eb4-bcfc-46f4-ad8c-2a90f05843ab"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("fcce1af5-8123-4f01-a075-af5331a6ef3a"),
                            HotelId = new Guid("aaa8869d-f923-4abf-bbb4-44d4fce509a8"),
                            IsActive = true,
                            RoomNo = "King Oda",
                            RoomTypeId = new Guid("accdac0c-7382-41f5-a4ca-92e41435acf4"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("8cd0098e-ccd3-4ec7-86f5-711c7c3e1787"),
                            HotelId = new Guid("92d14418-2deb-4813-bf2d-4b3ab0b5951e"),
                            IsActive = true,
                            RoomNo = "Single Oda",
                            RoomTypeId = new Guid("e0a585f2-79a4-4db8-95af-348e549f53eb"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("0c4de357-d7ba-40a0-9f75-24fd7afc3058"),
                            HotelId = new Guid("92d14418-2deb-4813-bf2d-4b3ab0b5951e"),
                            IsActive = true,
                            RoomNo = "Double Oda",
                            RoomTypeId = new Guid("5f3b1e9a-4ace-4ba7-b10f-2fb5911db8ac"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("48145034-afb7-4395-bcfc-3ec41bb9acaf"),
                            HotelId = new Guid("92d14418-2deb-4813-bf2d-4b3ab0b5951e"),
                            IsActive = true,
                            RoomNo = "Queen Oda",
                            RoomTypeId = new Guid("b4515eb4-bcfc-46f4-ad8c-2a90f05843ab"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("24618811-b859-4103-a858-e1cdbf8e41c4"),
                            HotelId = new Guid("92d14418-2deb-4813-bf2d-4b3ab0b5951e"),
                            IsActive = true,
                            RoomNo = "King Oda",
                            RoomTypeId = new Guid("accdac0c-7382-41f5-a4ca-92e41435acf4"),
                            Status = "Boş"
                        });
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0a585f2-79a4-4db8-95af-348e549f53eb"),
                            Capacity = 1,
                            Description = "Şık ve ferah",
                            IsActive = true,
                            Name = "Tek kişilik",
                            PricePerNight = 1500m
                        },
                        new
                        {
                            Id = new Guid("5f3b1e9a-4ace-4ba7-b10f-2fb5911db8ac"),
                            Capacity = 2,
                            Description = "Geniş ve ferah",
                            IsActive = true,
                            Name = "Çift kişilik",
                            PricePerNight = 2500m
                        },
                        new
                        {
                            Id = new Guid("b4515eb4-bcfc-46f4-ad8c-2a90f05843ab"),
                            Capacity = 3,
                            Description = "Geniş ve şık oda",
                            IsActive = true,
                            Name = "Üç kişilik",
                            PricePerNight = 3500m
                        },
                        new
                        {
                            Id = new Guid("accdac0c-7382-41f5-a4ca-92e41435acf4"),
                            Capacity = 4,
                            Description = "Geniş oda tasarımı",
                            IsActive = true,
                            Name = "Dört kişilik",
                            PricePerNight = 4200m
                        });
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("736e9c48-d42e-4583-b92e-96f5b216917d"),
                            DateOfBirth = new DateTime(1963, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marie@gmail.com",
                            FirstName = "Marie",
                            HireDate = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = new Guid("9c4eaa5f-d2b7-4ed3-9c3a-4d1a81c14d48"),
                            IsActive = true,
                            LastName = "Bertrand",
                            Phone = "(505) 555 55 50",
                            Position = "Teknik Müdür",
                            Salary = 40.000m
                        },
                        new
                        {
                            Id = new Guid("4eee4875-4361-4954-b906-02d55eee4b40"),
                            DateOfBirth = new DateTime(1955, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Steven@gmail.com",
                            FirstName = "Steven",
                            HireDate = new DateTime(1990, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = new Guid("9c4eaa5f-d2b7-4ed3-9c3a-4d1a81c14d48"),
                            IsActive = true,
                            LastName = "Buchanan",
                            Phone = "(71) 555-7773",
                            Position = "Muhasebe Müdürü",
                            Salary = 80.000m
                        },
                        new
                        {
                            Id = new Guid("4bea088f-b8d6-41b8-a7b6-4fd78b63fb81"),
                            DateOfBirth = new DateTime(1963, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Michael@gmail.com",
                            FirstName = "Michael",
                            HireDate = new DateTime(1993, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = new Guid("aaa8869d-f923-4abf-bbb4-44d4fce509a8"),
                            IsActive = true,
                            LastName = "Suyama",
                            Phone = "(536) 555-7773",
                            Position = "Mutfak Şefi",
                            Salary = 90.000m
                        },
                        new
                        {
                            Id = new Guid("f6e25595-84f3-402c-8211-9db116f57b23"),
                            DateOfBirth = new DateTime(1960, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Robert@gmail.com",
                            FirstName = "Robert",
                            HireDate = new DateTime(1994, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = new Guid("92d14418-2deb-4813-bf2d-4b3ab0b5951e"),
                            IsActive = true,
                            LastName = "King",
                            Phone = "(71) 555-5598",
                            Position = "Housekeeper",
                            Salary = 75.000m
                        });
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.GuestBooking", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", "Booking")
                        .WithMany("GuestBookings")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Guest", "Guest")
                        .WithMany("GuestBookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Payment", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Room", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Staff", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Hotel", "Hotel")
                        .WithMany("Staffs")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", b =>
                {
                    b.Navigation("GuestBookings");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Guest", b =>
                {
                    b.Navigation("GuestBookings");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
