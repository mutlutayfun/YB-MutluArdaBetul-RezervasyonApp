// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YB_MutluArdaBetülRezervasyonApp.DataAccessLayer.Context;

#nullable disable

namespace YB_MutluArdaBetülRezervasyonApp.DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240724070339_SecondInitDb")]
    partial class SecondInitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CheckinDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TCNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.GuestBooking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("GuestId");

                    b.ToTable("GuestBookings");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CheckinTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckoutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f625ebcf-c662-4f47-90ab-ac1c3e20e26d"),
                            Address = "Küçük Ayasofya, Çayıroğlu Sk. No:18, 34122 Fatih/İstanbul",
                            CheckinTime = new DateTime(2024, 7, 24, 10, 3, 38, 925, DateTimeKind.Local).AddTicks(3465),
                            CheckoutTime = new DateTime(2024, 7, 24, 10, 3, 38, 925, DateTimeKind.Local).AddTicks(3476),
                            Email = "CheersLighthouse@gmail.com",
                            IsActive = true,
                            Name = "Cheers Lighthouse",
                            Phone = "02124582324",
                            Stars = 4
                        },
                        new
                        {
                            Id = new Guid("e840b4a6-c96b-4acc-a1fb-49ef456ad74b"),
                            Address = "Levazım, Vadi Caddesi Zorlu Center, 34340 Beşiktaş/İstanbul",
                            CheckinTime = new DateTime(2024, 7, 24, 10, 3, 38, 925, DateTimeKind.Local).AddTicks(3479),
                            CheckoutTime = new DateTime(2024, 7, 24, 10, 3, 38, 925, DateTimeKind.Local).AddTicks(3480),
                            Email = "Raffles@gmail.com",
                            IsActive = true,
                            Name = "Hotel Raffles Istanbul",
                            Phone = "02129240200",
                            Stars = 5
                        },
                        new
                        {
                            Id = new Guid("b7fda42c-3677-4ffd-ac9d-0e29a6e979fc"),
                            Address = "Harbiye, Cumhuriyet Cd. No:50, 34367 Şişli/İstanbul",
                            CheckinTime = new DateTime(2024, 7, 24, 10, 3, 38, 925, DateTimeKind.Local).AddTicks(3482),
                            CheckoutTime = new DateTime(2024, 7, 24, 10, 3, 38, 925, DateTimeKind.Local).AddTicks(3482),
                            Email = "Hilton@gmail.com",
                            IsActive = true,
                            Name = "Hilton İstanbul Bosphorus",
                            Phone = "02123156000",
                            Stars = 5
                        });
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoomNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("198c267f-c8f6-46f9-8731-75c128f74af6"),
                            HotelId = new Guid("f625ebcf-c662-4f47-90ab-ac1c3e20e26d"),
                            IsActive = true,
                            RoomTypeId = new Guid("f9ca7648-5212-41ec-bfa9-7045ef223f53"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("d12238dc-2fb1-4b13-a08f-255c45bfabd5"),
                            HotelId = new Guid("e840b4a6-c96b-4acc-a1fb-49ef456ad74b"),
                            IsActive = true,
                            RoomTypeId = new Guid("778f006b-acca-43dc-ab9d-88b1e437187d"),
                            Status = "Boş"
                        },
                        new
                        {
                            Id = new Guid("6edf3eef-b9ca-4eed-93c5-9447fbb59ada"),
                            HotelId = new Guid("b7fda42c-3677-4ffd-ac9d-0e29a6e979fc"),
                            IsActive = true,
                            RoomTypeId = new Guid("70a80ebe-a8b3-4639-88ff-ffd04c03ef0b"),
                            Status = "Dolu"
                        },
                        new
                        {
                            Id = new Guid("2b55dd67-baa7-4b12-acbf-0428ceab121c"),
                            HotelId = new Guid("e840b4a6-c96b-4acc-a1fb-49ef456ad74b"),
                            IsActive = true,
                            RoomTypeId = new Guid("1e7c1fb4-500a-4bc0-9bc6-c683d3036100"),
                            Status = "Boş"
                        });
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9ca7648-5212-41ec-bfa9-7045ef223f53"),
                            Capacity = 1,
                            Description = "Şık ve ferah",
                            IsActive = true,
                            Name = "Tek kişilik",
                            PricePerNight = 1500m
                        },
                        new
                        {
                            Id = new Guid("778f006b-acca-43dc-ab9d-88b1e437187d"),
                            Capacity = 2,
                            Description = "Geniş ve ferah",
                            IsActive = true,
                            Name = "Çift kişilik",
                            PricePerNight = 2500m
                        },
                        new
                        {
                            Id = new Guid("70a80ebe-a8b3-4639-88ff-ffd04c03ef0b"),
                            Capacity = 3,
                            Description = "3 kişinin kalabileceği genişlikte bir oda",
                            IsActive = true,
                            Name = "Üç kişilik",
                            PricePerNight = 3500m
                        },
                        new
                        {
                            Id = new Guid("1e7c1fb4-500a-4bc0-9bc6-c683d3036100"),
                            Capacity = 4,
                            Description = "Geniş oda tasarımı",
                            IsActive = true,
                            Name = "Dört kişilik",
                            PricePerNight = 4200m
                        });
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("15c82689-4d0d-4eda-af3d-1cc76187e1d0"),
                            DateOfBirth = new DateTime(1963, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marie@gmail.com",
                            FirstName = "Marie",
                            HireDate = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = new Guid("f625ebcf-c662-4f47-90ab-ac1c3e20e26d"),
                            IsActive = true,
                            LastName = "Bertrand",
                            Phone = "(505) 555 55 50",
                            Position = "Teknik Müdür",
                            Salary = 40.000m
                        },
                        new
                        {
                            Id = new Guid("58b7bc63-b6a7-49a8-89e6-5cc7b3c72266"),
                            DateOfBirth = new DateTime(1955, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Steven@gmail.com",
                            FirstName = "Steven",
                            HireDate = new DateTime(1990, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = new Guid("f625ebcf-c662-4f47-90ab-ac1c3e20e26d"),
                            IsActive = true,
                            LastName = "Buchanan",
                            Phone = "(71) 555-7773",
                            Position = "Muhasebe Müdürü",
                            Salary = 80.000m
                        },
                        new
                        {
                            Id = new Guid("4adf38a1-0cde-4717-ae4c-991e955f3251"),
                            DateOfBirth = new DateTime(1963, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Michael@gmail.com",
                            FirstName = "Michael",
                            HireDate = new DateTime(1993, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = new Guid("e840b4a6-c96b-4acc-a1fb-49ef456ad74b"),
                            IsActive = true,
                            LastName = "Suyama",
                            Phone = "(536) 555-7773",
                            Position = "Mutfak Şefi",
                            Salary = 90.000m
                        },
                        new
                        {
                            Id = new Guid("5eaf3f5a-4d7e-44ac-ae8d-844f1893457c"),
                            DateOfBirth = new DateTime(1960, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Robert@gmail.com",
                            FirstName = "Robert",
                            HireDate = new DateTime(1994, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HotelId = new Guid("b7fda42c-3677-4ffd-ac9d-0e29a6e979fc"),
                            IsActive = true,
                            LastName = "King",
                            Phone = "(71) 555-5598",
                            Position = "Housekeeper",
                            Salary = 75.000m
                        });
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.GuestBooking", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", "Booking")
                        .WithMany("GuestBookings")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Guest", "Guest")
                        .WithMany("GuestBookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Payment", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Room", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Staff", b =>
                {
                    b.HasOne("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Hotel", "Hotel")
                        .WithMany("Staffs")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Booking", b =>
                {
                    b.Navigation("GuestBookings");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Guest", b =>
                {
                    b.Navigation("GuestBookings");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("YB_MutluArdaBetülRezervasyonApp.Entities.Models.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
